<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <!--
    It would have been nice to target netstandard2.1 for broader useability, but we ran into this issue:
    https://github.com/dotnet/runtime/issues/24613
    because the Oanda api prefers a keep-alive connection as explained here:
    https://developer.oanda.com/rest-live-v20/best-practices/
    -->
    <TargetFramework>net5</TargetFramework>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <IsPackable>true</IsPackable>

    <PackageId>FFT.Oanda</PackageId>
    <Summary>A .net client for the Oanda api.</Summary>
    <Description>$(Summary)</Description>
    <Company>True Goodwill</Company>
    <Authors>True Goodwill</Authors>
    <PackageProjectUrl>https://github.com/FastFinTech/FFT.Oanda</PackageProjectUrl>
    <RepositoryUrl>$(PackageProjectUrl)</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <PackageTags>oanda;api</PackageTags>
    <ApplicationIcon>FFT.ico</ApplicationIcon>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="ConfigureAwait.Fody" Version="3.3.1" />
    <PackageReference Include="FFT.Disposables" Version="0.0.6" />
    <PackageReference Include="Fody" Version="6.3.0">
      <PrivateAssets>all</PrivateAssets>
      <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
    </PackageReference>
    <PackageReference Include="Microsoft.AspNetCore.WebUtilities" Version="2.2.0" />
    <PackageReference Include="System.IO.Pipelines" Version="5.0.1" />
  </ItemGroup>

</Project>
